(function(tirequire,__dirname,__filename){module.id=__filename;module.loaded=false;module.filename=__filename;var require=tirequire("node_modules/ti-commonjs/lib/ti-commonjs")(__dirname,module);module.require=require;var fs = require("fs");

module.exports = function(grunt) {
    function getAllTimezones(callback) {
        fs.readFile(ZONE_TAB, "ascii", function(err, content) {
            null != err && callback(err);
            callback(null, content.split(/\r\n|\r|\n/).filter(function(line) {
                return line && !/^#/.test(line);
            }).map(function(line) {
                return line.split("	")[2];
            }));
        });
    }
    function runTestsInZone(zone, next) {
        grunt.log.ok("Running tests in zone " + zone);
        grunt.util.spawn({
            cmd: "grunt",
            opts: {
                env: {
                    PATH: process.env.PATH,
                    TZ: zone
                }
            },
            args: [ "--no-color", "nodeunit" ]
        }, function(err, result, code) {
            0 !== code && grunt.log.error(result.stdout.split(/\r\n|\r|\n/).filter(function(line) {
                return /^(>>|Warning:|$)/.test(line);
            }).map(function(line) {
                return ">> " === line.substr(0, 3) ? line.substr(3) : line;
            }).join("\n"));
            next();
        });
    }
    var ZONE_TAB = "/usr/share/zoneinfo/zone.tab";
    grunt.registerTask("zones", "Run the unit tests in different timezones.", function() {
        var done = this.async();
        getAllTimezones(function(err, zones) {
            if (null != err) throw err;
            (function iterator(i) {
                if (i >= zones.length) return done();
                runTestsInZone(zones[i], function(err) {
                    if (null != err) throw err;
                    iterator(i + 1);
                });
            })(0);
        });
    });
};
module.loaded=true;})(require,"/node_modules/moment/tasks","/node_modules/moment/tasks/zones.js");